"""注释"""
#===============================================================================
# """注释"""
#===============================================================================
# 特殊注释
# encoding=utf-8
# coding=utf-8
# _*_ coding:utf-8 _*_
# _*_ coding:utf-8 _*_
# Python2.x 版本
from test.test_tools.test_unparse import elif1
from os import name


# 特殊注释
#!/usr/bin/python
#!/usr/bin/env python
# 单行注释 - 在此处写下下一行代码的含义

'''  多行行首添加#
注释信息 
'''
""" 
注释信息 
"""

"""变量  比较运算"""
print ("========================================变量   比较运算====================================")
#===============================================================================
# """变量""" 
# 比较运算  和 js || 很像
# 非布尔类型的值, 如果作为真假来判定, 一般都是非零即真, 非空即真
# 整个逻辑表达式的结果不一定只是True和False
#===============================================================================
a = [1];b = [1];c, d = 1, 1;e = f = 3;
print ("值比较="+ str(a == b))
print ("类型比较="+ str(a is b))
print ("id取值="+ str(id(d)))
#链式运算
print ('链式运算='+ str(c < 2 < f))

# not 非, 取反, 真 -> 假; 假 -> 真
b = False
#0是false 非0是true
#and 指最后一个真才是真 ，or是第一真就 是真了，和js很像
print ('false取反='+ str(not b))
print ('0 and True='+ str(0 and True))
print ('1 and 3='+ str(1 and 3))
print ('0 or False or 6='+ str(0 or False or 6))

"""输入 输出"""
#===============================================================================
#输入 输出
#raw_input 相当于是输入
#input 相当于是eval
#
#===============================================================================
print ("========================python2================输出====================================")
# 格式化输出
name = 'sz'
age = 18
# 我的名字是xxx, 年龄是xxx
print("我的名字是%s, 年龄是%d"%(name, age))
print("我的名字是{0}, 年龄是{1}".format(name, age))
# python2输出到文件中
# print >>open("test.txt", "w"), "12345"
#f = open("test.txt", "w")
import sys
# python3输出到文件中
f = open("test.txt", "w") #w只能写
print("xxxxxxxx", file=sys.stdout)
#  输出不自动换行 默认是 \n
print("abc", end="")
print("---abc", end="我是分隔符11111111111111111")
print(list("abc"))
# flush 参数的说明
# print("请输入账号", end="", flush=True)
# 休眠5s
from time import sleep
# sleep(5)

"""分支控制"""
#===============================================================================
#分支控制
#===============================================================================
print ("===================================分支控制====================================")
# age = input("请输入年龄")
# age = int(age)
age = 6
if 0<age<5:
    print ('if else 控制='+'幼儿')
elif  5<age<10 :
    print ('if else 控制='+'少年')
"""循环控制 pass"""
#===============================================================================
#循环控制 
#  for i in   
#  for range
#  pass
# exit break时不会执行else
#===============================================================================
print ("===================================循环控制====================================")
# 遍历一个集合
# 字符串, 列表
notice = "社会我顺哥, 人狠话不多";pets = ["小花", "小黑", "小黄", "小红"]
for c in notice:
#     print(c)
    pass
else:
    pass
#     print("for else="+"循环完毕,如果使用break的话将不执行 else里面的内容")
for num in range(1,5):
    if num%2==0:
        print("for range1-5 偶数学习="+ str(num))
# while True :
"""数据类型"""
#===============================================================================
#数据类型
# int  float
# oct
#str
#===============================================================================
print ("===================================数据类型====================================")
print("complex(1, 2)="+str(complex(1, 2)))
a =0b1111
if a is str:
    print("0b1111是str="+str(type(a)))
else:
    print("0b1111是int="+str(type(a)))

name="123456"
print("string方法="+name[1:3])